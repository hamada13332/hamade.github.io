{"version":3,"sources":["view/pages/login/Login.style.js","view/pages/login/Login.js"],"names":["styled","div","SingIn","useState","username","SetUserName","password","SetPassword","dispatch","useDispatch","id","name","className","initialValues","remember","labelCol","span","onFinish","values","login","Item","label","rules","required","message","prefix","UserOutlined","onChange","e","target","value","placeholder","Password","LockOutlined","type","valuePropName","noStyle","block","htmlType"],"mappings":"kPAK2BA,IAAOC,IAAV,u7F,aC8FTC,UAxFA,WAEb,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAIMC,EAAWC,cAMjB,OACE,qBAAKC,GAAG,QAAR,SACE,eAAC,IAAD,CACEC,KAAK,eACLC,UAAU,aACVC,cAAe,CAAEC,UAAU,GAC3BC,SAAU,CAAEC,KAAM,IAClBC,SAXW,SAACC,GAChBV,EAASW,YAAMf,EAAUE,KAKvB,UAOE,qBAAKM,UAAU,OAAf,kBAGA,qGAUA,qBAAKF,GAAG,kBACR,cAAC,IAAKU,KAAN,CACET,KAAK,WACLU,MAAM,sEACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,kGAJ/B,SAOE,cAAC,IAAD,CACEC,OAAQ,cAACC,EAAA,EAAD,CAAcd,UAAU,wBAChCe,SAAU,SAACC,GAAD,OAAOvB,EAAYuB,EAAEC,OAAOC,QACtCC,YAAY,0EAIhB,cAAC,IAAKX,KAAN,CACET,KAAK,WACLU,MAAM,oDACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,kGAHrC,SAKE,cAAC,IAAMQ,SAAP,CACEP,OAAQ,cAACQ,EAAA,EAAD,CAAcrB,UAAU,wBAChCsB,KAAK,WACLP,SAAU,SAACC,GAAD,OAAOrB,EAAYqB,EAAEC,OAAOC,QACtCC,YAAY,aAIhB,cAAC,IAAKX,KAAN,UACE,cAAC,IAAKA,KAAN,CAAWT,KAAK,WAAWwB,cAAc,UAAUC,SAAO,EAA1D,SACE,cAAC,IAAD,uDAUJ,cAAC,IAAKhB,KAAN,CAAWR,UAAU,WAArB,SACE,cAAC,IAAD,CAAQsB,KAAK,UAAUG,OAAK,EAACC,SAAS,SAAS1B,UAAU,oBAAzD","file":"static/js/8.c44ea355.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n//import bgImage from '@app/assets/img/sign.jpg';\r\n// background: u rl(${bgImage}) no-repeat center center;\r\n\r\nconst SignInStyleWrapper = styled.div`\r\n        #login{\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          height: 100vh;\r\n          background-color: #f1f8fb;\r\n          .login-form{\r\n              width: 400px;\r\n              padding: 33px 33px !important;\r\n              // border: 1px solid #0591aa;\r\n              border: 1px solid #f5f3f2;\r\n              border-radius: 5px;\r\n              transition: 0.5s;\r\n              background-color: white;\r\n              // box-shadow: rgba(0,0,0,0.15) 1.95px 1.95px 2.6px;\r\n              box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n\r\n              &:hover{\r\n                  border-color:#00adcc;\r\n              }\r\n              .logo{\r\n                text-align: center;\r\n              }\r\n              .ant-form-item-label{\r\n                  padding: 0;\r\n                  color: #1a3353;\r\n                  font-weight: 700;\r\n              }\r\n              .ant-form-item{\r\n                  color: #1a3353;\r\n                  font-weight: 700;\r\n              }\r\n              h4{\r\n                  text-align: center;\r\n                  10px;\r\n                  color: #0591aa;\r\n                  font-weight: 600;\r\n                  font-size: 20px;\r\n              }\r\n              a{\r\n                  color: #00adcc;\r\n                  font-weight: 600;\r\n                  font-size: 14px;\r\n                  transition: 0.5;\r\n                  &:hover{\r\n                      color: #0591aa;\r\n                  }\r\n              }\r\n              .ant-checkbox-wrapper:hover .ant-checkbox-inner, .ant-checkbox:hover .ant-checkbox-inner, .ant-checkbox-input:focus + .ant-checkbox-inner {\r\n                  border-color: #00adcc;\r\n              }\r\n              .ant-checkbox-checked .ant-checkbox-inner {\r\n                  background-color: #00adcc;\r\n                  border-color: #0591aa;\r\n                  &:hover{\r\n                  border-color: #0591aa;\r\n                  }\r\n              }\r\n              .ant-input-affix-wrapper:focus{\r\n                  border-color: #00adcc;\r\n              }\r\n              .ant-checkbox-checked::after {\r\n                  border: 1px solid #00adcc;\r\n\r\n              }\r\n              .ant-input-affix-wrapper:not(.ant-input-affix-wrapper-disabled):hover {\r\n                  border-color: #00adcc;\r\n              }\r\n              .register{\r\n                  text-align: center;\r\n                  button{\r\n                      15px 0;\r\n                      color: #fff;\r\n                      border-color: #0591aa;\r\n                      background: #0591aa;\r\n                      &:hover{\r\n                          color: #fff;\r\n                          border-color: #00adcc;\r\n                          background: #00adcc;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          @media (min-width: 1367px){\r\n            .login-form{\r\n                -250px;\r\n            }\r\n          }\r\n        }\r\n  }\r\n`;\r\n\r\nexport default SignInStyleWrapper;"," \r\n\r\nimport { Form, Input, Button, Checkbox, Alert } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../../redux/auth/actions\";\r\nimport { useState } from \"react\";\r\nimport SignInStyleWrapper from \"./Login.style\";\r\nimport \"./login.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SingIn = () => {\r\n\r\n  const [username, SetUserName] = useState(\"\");\r\n  const [password, SetPassword] = useState(\"\");\r\n  // const isError = useSelector((state) => state.Auth.error);\r\n  // const errorMessage = useSelector((state) => state.Auth.errorMessage);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(login(username, password));\r\n  };\r\n\r\n  return (\r\n    <div id=\"login\">\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{ remember: false }}\r\n        labelCol={{ span: 24 }}\r\n        onFinish={onFinish}\r\n      >\r\n        <div className=\"logo\">\r\n          logo\r\n        </div>\r\n        <h4>تسجيل الدخول</h4>\r\n        {/* {errorMessage ? (\r\n          <Alert\r\n            style={{ marginBottom: 15 }}\r\n            message={errorMessage}\r\n            type=\"info\"\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )} */}\r\n        <div id=\"error-content\"></div>\r\n        <Form.Item\r\n          name=\"username\"\r\n          label=\"أسم المستخدم\"\r\n          rules={[\r\n            { required: true, message: \"يرجى ملئ هذا الحقل\" },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            onChange={(e) => SetUserName(e.target.value)}\r\n            placeholder=\"أسم المستخدم\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"كلمة السر\"\r\n          rules={[{ required: true, message: \"يرجى ملئ هذا الحقل\" }]}\r\n        >\r\n          <Input.Password\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            onChange={(e) => SetPassword(e.target.value)}\r\n            placeholder=\"Parola\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>تذكرني</Checkbox>\r\n          </Form.Item>\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n          <NavLink className=\"login-form-forgot\" to=\"dasdfasf\">\r\n            Parolamı unuttum?\r\n          </NavLink>\r\n        </Form.Item> */}\r\n\r\n        <Form.Item className=\"register\">\r\n          <Button type=\"primary\" block htmlType=\"submit\" className=\"login-form-button\" >\r\n            تسجيل الدخول\r\n          </Button>\r\n          {/* <span>\r\n            Üye değilse ? <NavLink to=\"fsafsad\">Kayıt Ol</NavLink>\r\n          </span> */}\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingIn;"],"sourceRoot":""}