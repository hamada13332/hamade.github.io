{"version":3,"sources":["assets/images/logo.png","components/common/sidebar/options.js","components/common/sidebar/Sidebar.styles.js","components/common/sidebar/SidebarMenu.js","components/common/sidebar/Sidebar.js","components/common/topbar/TopbarDropdown.styles.js","components/common/topbar/TopbarUser.js","components/common/topbar/Topbar.styles.js","components/common/topbar/Topbar.js","view/Admin/dashboard/DashboardRoutes.js","view/Admin/dashboard/Dashboard.styles.js","view/Admin/dashboard/Dashboard.js"],"names":["options","key","label","leftIcon","HomeOutlined","AppstoreOutlined","SidebarWrapper","styled","div","props","palette","SubMenu","Menu","React","memo","str","singleOption","submenuStyle","submenuColor","rest","match","useRouteMatch","children","url","substr","length","title","className","style","map","child","linkTo","withoutDashboard","Item","to","Sider","Layout","toggleOpenDrawer","appActions","changeCurrent","changeOpenKeys","toggleCollapsed","Sidebar","dispatch","useDispatch","useSelector","state","App","view","openKeys","collapsed","openDrawer","current","height","isCollapsed","mode","styling","backgroundColor","color","trigger","collapsible","width","onMouseEnter","event","onMouseLeave","onClick","e","setTimeout","theme","selectedKeys","TopbarDropdownWrapper","TopbarUser","useState","visible","setVisibility","content","logout","onVisibleChange","arrowPointAtCenter","placement","alt","src","userpic","TopbarWrapper","Header","Topbar","setSelectedItem","customizedTheme","handleToggle","useCallback","background","position","MenuUnfoldOutlined","routes","path","component","lazy","exact","AppRouter","fallback","route","idx","DashboardGlobalStyles","createGlobalStyle","DashboardContainer","Content","Footer","styles","layout","flexDirection","overflowX","padding","flexShrink","footer","textAlign","borderTop","Dashboard","id"],"mappings":"kGAAe,QAA0B,kC,yJC+B1BA,EAvBC,CACd,CACEC,IAAK,GACLC,MAAO,wFACPC,SAAU,cAACC,EAAA,EAAD,KAEZ,CACEH,IAAK,cACLC,MAAO,6CACPC,SAAU,cAACE,EAAA,EAAD,KAEZ,CACEJ,IAAK,YACLC,MAAO,6CACPC,SAAU,cAACE,EAAA,EAAD,KAEZ,CACEJ,IAAK,UACLC,MAAO,yDACPC,SAAU,cAACE,EAAA,EAAD,M,gCCmQCC,EA1RQC,IAAOC,IAAV,w1KAsGR,SAACC,GAAD,MACsB,QAAtBA,EAAM,YAAwB,aAAe,iBAyDrCC,kBAAQ,YAAa,IAiBvB,SAACD,GAAD,MAAkC,QAAtBA,EAAM,YAAwB,OAAS,UAClD,SAACA,GAAD,MAAkC,QAAtBA,EAAM,YAAwB,OAAS,SAe1D,IAwBc,SAACA,GAAD,MACQ,QAAtBA,EAAM,YAAwB,iBAAmB,qBAClC,SAACA,GAAD,MACO,QAAtBA,EAAM,YAAwB,kBAAoB,oB,gFC3NxDE,EAAUC,IAAKD,QAQNE,MAAMC,MAAK,YAKtB,IAXuBC,EAOzBC,EAIC,EAJDA,aACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,aACGC,EACF,iBACGC,EAAQC,cAEJpB,EAAmCe,EAAnCf,IAAKC,EAA8Bc,EAA9Bd,MAAOC,EAAuBa,EAAvBb,SAAUmB,EAAaN,EAAbM,SACxBC,EAdiB,OADER,EAeMK,EAAMG,KAd7BC,QAAQ,GACPT,EAAIS,OAAO,EAAGT,EAAIU,OAAS,GAE7BV,EAaP,OAAIO,EAEA,cAACX,EAAD,yBAEEe,MACE,uBAAMC,UAAU,gBAAgBC,MAAOV,EAAvC,UACGf,EACD,sBAAMwB,UAAU,WAAhB,SACGzB,QAIHiB,GAVN,aAYGG,EAASO,KAAI,SAAAC,GACZ,IAAMC,EAASD,EAAME,iBAAN,WACPF,EAAM7B,KADC,UAERsB,EAFQ,YAEDO,EAAM7B,KACpB,OACE,cAAC,IAAKgC,KAAN,CAAWL,MAAOX,EAAlB,SACE,cAAC,IAAD,CAAMW,MAAOV,EAAcgB,GAAIH,EAA/B,SACID,EAAM5B,SAFyB4B,EAAM7B,UAhB1CA,GA4BT,cAAC,IAAKgC,KAAN,2BAAyBd,GAAzB,aACE,cAAC,IAAD,CAAMe,GAAE,UAAKX,EAAL,YAAYtB,GAApB,SACE,uBAAM0B,UAAU,gBAAgBC,MAAOV,EAAvC,UACGf,EACD,sBAAMwB,UAAU,WAAhB,SACGzB,WALOD,MC1CZkC,EAAUC,IAAVD,MAEHE,EAGcC,IAHdD,iBAELE,GACmBD,IAFnBE,eAEmBF,IADnBC,eACAE,EAAmBH,IAAnBG,gBAEe,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAOIC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAN7BC,EADF,EACEA,KACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,QALF,EAMEC,OAkCF,IAOMC,EAAcJ,IAAcC,EAC5BI,GAAuB,IAAhBD,EAAuB,WAAa,SAa3CE,EAAU,CACdC,gBAAiB,WAEbxC,EAAe,CACnBwC,gBAAiB,GACjBC,MAAO,oBAEHxC,EAAe,CACnBwC,MAAO,oBAET,OACE,cAAC,EAAD,CAAgB9B,MAAO4B,EAAvB,SACE,eAACrB,EAAD,CACEwB,QAAS,KACTC,aAAa,EACbV,UAAWI,EACXO,MAAO,IACPlC,UAAU,oBACVmC,aA9Be,SAAAC,GACfb,IAA4B,IAAfC,GACfR,EAASN,MA6BP2B,aAzBe,WACfd,IAA4B,IAAfC,GACfR,EAASN,MAwBPT,MAAO4B,EART,UAUE,sBAAM5B,MAAO,CAAC8B,MAAM,OAAOG,MAAQ,QAAnC,kBAGE,cAAC,IAAD,CACEI,QA3EV,SAAqBC,GACnBvB,EAASJ,EAAc,CAAC2B,EAAEjE,OACb,eAAT+C,GACFmB,YAAW,WACTxB,EAASF,OAER,MAsEG2B,MAAM,OACNzC,UAAU,mBACV4B,KAAMA,EACNN,SAAUK,EAAc,GAAKL,EAC7BoB,aAAcjB,EANhB,SAUIpD,EAAQ6B,KAAI,SAAAb,GAAY,OACtB,cAAC,EAAD,CAEEC,aAAcA,EACdC,aAAcA,EACdF,aAAcA,GAHTA,EAAaf,e,gCC8HrBqE,EAnPe/D,IAAOC,IAAV,46IAyBZE,kBAAQ,OAAQ,GAaPA,kBAAQ,YAAa,IAazB,SAAAD,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,QAAU,SAErCC,kBAAQ,SAAU,GAGvBA,kBAAQ,YAAa,GAahCA,kBAAQ,OAAQ,GAOhBA,kBAAQ,OAAQ,GAQhBA,kBAAQ,YAAa,GASzBA,kBAAQ,OAAQ,GASdA,kBAAQ,UAAW,GAanBA,kBAAQ,OAAQ,GAILA,kBAAQ,SAAU,GAMhBA,kBAAQ,UAAW,GACvBA,kBAAQ,UAAW,GAQ5BA,kBAAQ,OAAQ,IAcrB,SAAAD,GAAK,MACiB,QAAtBA,EAAM,YAAwB,aAAe,eAO3BC,kBAAQ,YAAa,IAuB5B,SAAAD,GAAK,MACQ,QAAtBA,EAAM,YAAwB,aAAe,eAKtCC,kBAAQ,YAAa,GA2CzBA,kBAAQ,OAAQ,GASHA,kBAAQ,YAAa,I,iBCtOlC,SAAS6D,IACtB,MAAiC1D,IAAM2D,UAAS,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACM/B,EAAWC,cAKjB,IAAM+B,EACJ,cAAC,EAAD,CAAuBhD,UAAU,kBAAjC,SAaE,qBAAKA,UAAU,kBAAkBsC,QAAS,kBAAMtB,EAASiC,gBAAzD,2CAMJ,OACE,cAAC,IAAD,CACED,QAASA,EACThB,QAAQ,QACRc,QAASA,EACTI,gBA7BJ,WACEH,GAAc,SAAAD,GAAO,OAAKA,MA6BxBK,oBAAoB,EACpBC,UAAU,aANZ,SAQE,sBAAKpD,UAAU,gBAAf,UACE,qBAAKqD,IAAI,OAAOC,IAAKC,MACrB,sBAAMvD,UAAU,6BC5CxB,IA6bewD,EA7bO5E,IAAOC,IAAV,+8TAQJ,SAAAC,GAAK,MACQ,QAAtBA,EAAM,YAAwB,iBAAmB,oBAItC,SAAAA,GAAK,MACQ,QAAtBA,EAAM,YACF,gCACA,mCAIK,SAAAA,GAAK,MACQ,QAAtBA,EAAM,YAAwB,gBAAkB,mBAErC,SAAAA,GAAK,OACdA,EAAM,YACF,yBAUJ,SAAAA,GAAK,MACiB,QAAtBA,EAAM,YAAwB,aAAe,gBAwB7C,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,OAAS,OACjD,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,IAAM,UAO5C,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,OAAS,OACjD,SAAAA,GAAK,MACiB,QAAtBA,EAAM,YAAwB,IAAM,SAS5BC,kBAAQ,OAAQ,GAWJA,kBAAQ,YAAa,IAYjC,SAAAD,GAAK,MACW,QAAtBA,EAAM,YAAwB,UAAY,UACnC,SAAAA,GAAK,MACU,QAAtBA,EAAM,YAAwB,OAAS,YAOnBC,kBAAQ,QAAS,GAQjBA,kBAAQ,UAAW,GAQnBA,kBAAQ,QAAS,GAQjBA,kBAAQ,QAAS,GAanBA,kBAAQ,YAAa,GAWnBA,kBAAQ,QAAS,GA6B9BA,kBAAQ,OAAQ,GASHA,kBAAQ,YAAa,GAuChCA,kBAAQ,OAAQ,GAcPA,kBAAQ,YAAa,GAYjBA,kBAAQ,YAAa,GAahCA,kBAAQ,OAAQ,GAOhBA,kBAAQ,OAAQ,GAQhBA,kBAAQ,YAAa,GASzBA,kBAAQ,OAAQ,GASdA,kBAAQ,UAAW,GAanBA,kBAAQ,OAAQ,GAILA,kBAAQ,SAAU,GAMhBA,kBAAQ,UAAW,GACvBA,kBAAQ,UAAW,GAQ5BA,kBAAQ,OAAQ,GAqBHA,kBAAQ,YAAa,GA4B9BA,kBAAQ,YAAa,I,SC/XxC0E,EAAWhD,IAAXgD,OACA3C,EAAoBH,IAApBG,gBAEO,SAAS4C,IACtB,MAAwCxE,IAAM2D,SAAS,IAAvD,mBAAqBc,GAArB,WAEMC,EACc,OADdA,EAEQ,OAEd,EAAkC1C,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAArDG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WACbR,EAAWC,cACX4C,EAAe3E,IAAM4E,aAAY,kBAAM9C,EAASF,OAAoB,CACxEE,IAEIW,EAAcJ,IAAcC,EAC5BK,EAAU,CACdkC,WAAYH,EACZI,SAAU,QACV9B,MAAO,OACPR,OAAQ,IAEV,OACE,cAAC,EAAD,CAAe,WAAS,MAAxB,SACE,eAAC+B,EAAD,CACExD,MAAO4B,EAEP7B,UACE2B,EAAc,6BAA+B,mBAJjD,UAOE,qBAAK3B,UAAU,UAAf,SACE,wBACEA,UACE2B,EAAc,2BAA6B,sBAE7C1B,MAAO,CAAE8B,MAAO6B,GAChBtB,QAASuB,EALX,SAMC,cAACI,EAAA,EAAD,QAGH,oBAAIjE,UAAU,WAAd,SAgBE,oBAAIsC,QAAS,kBAAMqB,EAAgB,SAAS3D,UAAU,UAAtD,SACE,cAAC4C,EAAD,a,iBChENsB,EAAS,CACb,CACEC,KAAM,GACNC,UAAWC,gBAAK,kBAAM,kCACtBC,OAAQ,GAEV,CACEH,KAAM,eACNC,UAAWC,gBAAK,kBAAM,oCAIX,SAASE,IACtB,IAAQ3E,EAAQF,cAARE,IACR,OACE,cAAC,WAAD,CAAU4E,SAAU,cAAC,IAAD,IAApB,SACI,cAAC,IAAD,UACGN,EAAOhE,KAAI,SAACuE,EAAOC,GAAR,OACV,cAAC,IAAD,CAAOJ,MAAOG,EAAMH,MAAiBH,KAAI,UAAKvE,GAAL,OAAW6E,EAAMN,MAA1D,SACE,cAACM,EAAML,UAAP,KAD8BM,UCnBrC,IAAMC,EAAwBC,YAAH,w7IAsPrBC,EAAqBjG,IAAOC,IAAV,83CAWlBE,kBAAQ,UAAW,GAYdA,kBAAQ,YAAa,GAsBfA,kBAAQ,SAAU,GA0BtC,ICxTI+F,EAAoBrE,IAApBqE,QAASC,EAAWtE,IAAXsE,OACXC,EAAS,CACbC,OAAQ,CAAEC,cAAe,MAAOC,UAAW,UAC3CnC,QAAS,CACPoC,QAAS,WACTC,WAAY,IACZtB,WAAY,UACZC,SAAU,YAEZsB,OAAQ,CACNvB,WAAY,UACZwB,UAAW,SACXC,UAAW,sBAIA,SAASC,IACtB,OACE,eAACZ,EAAD,WACE,cAACF,EAAD,IACA,eAAC,IAAD,CAAQ1E,MAAO,CAAEyB,OAAQ,SAAzB,UACE,cAACgC,EAAD,IACA,eAAC,IAAD,CAAQzD,MAAO+E,EAAOC,OAAtB,UACE,cAAClE,EAAD,IACA,eAAC,IAAD,CACEf,UAAU,uBADZ,UAME,cAAC8E,EAAD,CAASY,GAAG,eAAe1F,UAAU,oBAAoBC,MAAO+E,EAAOhC,QAAvE,SACE,cAAC,EAAD,MAEF,cAAC+B,EAAD,CAAQ9E,MAAO+E,EAAOM,OAAtB,SAA+B","file":"static/js/9.8767c453.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3e24202a.png\";","import {\r\n  AppstoreOutlined,\r\n  CopyOutlined,\r\n  HomeOutlined,\r\n  SettingOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst options = [\r\n  {\r\n    key: '',\r\n    label: 'الصفحة الرئيسية',\r\n    leftIcon: <HomeOutlined />,\r\n  },\r\n  {\r\n    key: 'kategoriler',\r\n    label: 'الأقسام',\r\n    leftIcon: <AppstoreOutlined />,\r\n  },\r\n  {\r\n    key: 'icerikler',\r\n    label: 'المحتوى',\r\n    leftIcon: <AppstoreOutlined />,\r\n  },\r\n  {\r\n    key: 'ayarlar',\r\n    label: 'الأعدادات',\r\n    leftIcon: <AppstoreOutlined />,\r\n  }\r\n];\r\n\r\nexport default options;","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n// import { transition, borderRadius } from '@app/lib/helpers/style_utils';\r\n\r\nconst SidebarWrapper = styled.div`\r\n  .ant-layout-sider-collapsed{\r\n    flex: 0 0 42px!important;\r\n    max-width: 42px!important;\r\n    min-width: 42px!important;\r\n  }\r\n \r\n  .isomorphicSidebar {\r\n    z-index: 1000;\r\n    background:#2d3446;\r\n    width: 2 20px;\r\n    flex: 0 0 2 20px;\r\n    .scrollarea {\r\n      height: calc(100vh - 70px);\r\n    }\r\n\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      width: 240px !important;\r\n      flex: 0 0 240px !important;\r\n    }\r\n\r\n    &.ant-layout-sider-collapsed {\r\n      @media only screen and (max-width: 767px) {\r\n        width: 0;\r\n        min-width: 0 !important;\r\n        max-width: 0 !important;\r\n        flex: 0 0 0 !important;\r\n      }\r\n    }\r\n\r\n    .isoLogoWrapper {\r\n      height: 60px;\r\n      background: #fff;\r\n      border-right : 1px solid #2d344614;\r\n      border-bottom: 1px solid #2d344614;\r\n      0;\r\n      padding: 0 10px;\r\n      text-align: center;\r\n      overflow: hidden;\r\n      h3 {\r\n        a {\r\n          font-size: 15px;\r\n          font-weight: 100;\r\n          60px;\r\n          letter-spacing: 3px;\r\n          text-transform: uppercase;\r\n          color: black;\r\n          display: block;\r\n          text-decoration: none;\r\n          img{\r\n            height : 40px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &.ant-layout-sider-collapsed {\r\n      .isoLogoWrapper {\r\n        padding: 0;\r\n\r\n        h3 {\r\n          a {\r\n            font-size: 21px;\r\n            font-weight: 500;\r\n            letter-spacing: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .isoDashboardMenu {\r\n      padding-top: 25px;\r\n      padding-bottom: 35px;\r\n      background: transparent;\r\n\r\n\r\n\r\n\r\n      a {\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n      }\r\n\r\n      .ant-menu-item {\r\n        width: 90%;\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        border-radius: 0 7px 7px 0;\r\n        -ms-flex-align: center;\r\n        align-items: center;\r\n        padding: 0 14px!important;\r\n        0;\r\n      }\r\n\r\n      .isoMenuHolder {\r\n        display: flex;\r\n        align-items: center;\r\n        float : right;\r\n        i {\r\n          font-size: 19px;\r\n          color: inherit;\r\n          ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '0 0 0 10px' : '3px 10px 0 0'};\r\n          width: 14px;\r\n          color: #fff;\r\n        }\r\n      }\r\n\r\n      .anticon {\r\n        font-size: 14px;\r\n        10px;\r\n        color: inherit;\r\n      }\r\n\r\n      .nav-text {\r\n        font-size: 13px;\r\n        color: inherit;\r\n        font-weight: 400;\r\n        letter-spacing: 0.1px;\r\n      }\r\n\r\n      .ant-menu-item-selected {\r\n        background-color: rgba(117 ,193, 195 , 0.18) !important;\r\n        .anticon {\r\n          color: #05bbc8;\r\n        }\r\n\r\n        i {\r\n          color: #e6e6fe;\r\n        }\r\n\r\n        .nav-text {\r\n          color: #05bbc8;\r\n        }\r\n      }\r\n\r\n      > li {\r\n        &:hover {\r\n          i,\r\n          .nav-text {\r\n            color: #58a0a2;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .ant-menu-submenu-open > .ant-menu-submenu-title{\r\n      background-color: rgba(117 ,193, 195 , 0.18) !important;\r\n      width: 100%!important;\r\n      border-radius:0!important;\r\n    }\r\n    .ant-menu-submenu-title{\r\n\r\n      i{\r\n        top : 55%;\r\n      }\r\n    }\r\n   \r\n    .ant-menu-dark .ant-menu-inline.ant-menu-sub {\r\n      background: ${palette('secondary', 5)};\r\n    }\r\n\r\n    .ant-menu-submenu-inline,\r\n    .ant-menu-submenu-vertical {\r\n      > .ant-menu-submenu-title {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 0 14px!important;\r\n\r\n        > span {\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n\r\n        .ant-menu-submenu-arrow {\r\n          left: ${(props) => (props['data-rtl'] === 'rtl' ? '25px' : 'auto')};\r\n          right: ${(props) => (props['data-rtl'] === 'rtl' ? 'auto' : '25px')};\r\n\r\n          &:before,\r\n          &:after {\r\n            width: 8px;\r\n          }\r\n\r\n          &:before {\r\n            transform: rotate(-45deg) translateX(3px);\r\n          }\r\n\r\n          &:after {\r\n            transform: rotate(45deg) translateX(-3px);\r\n          }\r\n\r\n          ${'' /* &:after {\r\n            content: '\\f123';\r\n            'Ionicons' !important;\r\n            font-size: 16px;\r\n            color: inherit;\r\n            left: ${props => (props['data-rtl'] === 'rtl' ? '16px' : 'auto')};\r\n            right: ${props => (props['data-rtl'] === 'rtl' ? 'auto' : '16px')};\r\n          } */};\r\n        }\r\n\r\n        &:hover {\r\n          .ant-menu-submenu-arrow {\r\n            &:before,\r\n            &:after {\r\n              color: #ffffff;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      .ant-menu-inline,\r\n      .ant-menu-submenu-vertical {\r\n        > li:not(.ant-menu-item-group) {\r\n          padding-left: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '0px !important' : '50px !important'};\r\n          padding-right: ${(props) =>\r\n            props['data-rtl'] === 'rtl' ? '50px !important' : '0px !important'};\r\n          font-size: 13px;\r\n          font-weight: 400;\r\n          0;\r\n          color: inherit;\r\n\r\n          &:hover {\r\n            a {\r\n              color: #ffffff !important;\r\n            }\r\n          }\r\n        }\r\n\r\n        .ant-menu-item-group {\r\n          padding-left: 0;\r\n\r\n          .ant-menu-item-group-title {\r\n            padding-left: 100px !important;\r\n          }\r\n          .ant-menu-item-group-list {\r\n            .ant-menu-item {\r\n              padding-left: 125px !important;\r\n\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .ant-menu-sub {\r\n        box-shadow: none;\r\n        background-color: transparent !important;\r\n      }\r\n    }\r\n\r\n    &.ant-layout-sider-collapsed {\r\n      .nav-text {\r\n        display: none;\r\n      }\r\n\r\n      .ant-menu-submenu-inline > {\r\n        .ant-menu-submenu-title:after {\r\n          display: none;\r\n        }\r\n      }\r\n\r\n      .ant-menu-submenu-vertical {\r\n        > .ant-menu-submenu-title:after {\r\n          display: none;\r\n        }\r\n\r\n        .ant-menu-sub {\r\n          background-color: transparent !important;\r\n\r\n          .ant-menu-item {\r\n            height: 35px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SidebarWrapper;","\r\nimport { Menu } from 'antd';\r\nimport React from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nconst stripTrailingSlash = str => {\r\n  if (str.substr(-1) === '/') {\r\n    return str.substr(0, str.length - 1);\r\n  }\r\n  return str;\r\n};\r\nexport default React.memo(function SidebarMenu({\r\n  singleOption,\r\n  submenuStyle,\r\n  submenuColor,\r\n  ...rest\r\n}) {\r\n  let match = useRouteMatch();\r\n\r\n  const { key, label, leftIcon, children } = singleOption;\r\n  const url = stripTrailingSlash(match.url);\r\n\r\n  if (children) {\r\n    return (\r\n      <SubMenu\r\n        key={key}\r\n        title={\r\n          <span className=\"isoMenuHolder\" style={submenuColor}>\r\n            {leftIcon}\r\n            <span className=\"nav-text\">\r\n              {label}\r\n            </span>\r\n          </span>\r\n        }\r\n        {...rest}\r\n      >\r\n        {children.map(child => {\r\n          const linkTo = child.withoutDashboard\r\n            ? `/${child.key}`\r\n            : `${url}/${child.key}`;\r\n          return (\r\n            <Menu.Item style={submenuStyle} key={child.key}>\r\n              <Link style={submenuColor} to={linkTo}>\r\n                 {child.label}\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        })}\r\n      </SubMenu>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Menu.Item key={key} {...rest}>\r\n      <Link to={`${url}/${key}`}>\r\n        <span className=\"isoMenuHolder\" style={submenuColor}>\r\n          {leftIcon}\r\n          <span className=\"nav-text\">\r\n            {label}\r\n          </span>\r\n        </span>\r\n      </Link>\r\n    </Menu.Item>\r\n  );\r\n});","\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Layout, Menu } from 'antd';\r\nimport options from './options';\r\n// import Scrollbars from '@app/components/utility/customScrollBar';\r\nimport appActions from '../../../redux/app/actions';\r\n// import Logo from '@app/components/utility/logo';\r\nimport SidebarWrapper from './Sidebar.styles';\r\nimport SidebarMenu from './SidebarMenu';\r\n// import changeCurrent from '../../../redux/app/actions';\r\n\r\n// const SubMenu = Menu.SubMenu;\r\n// const MenuItemGroup = Menu.ItemGroup;\r\nconst { Sider } = Layout;\r\n\r\nvar {toggleOpenDrawer,\r\nchangeOpenKeys,\r\nchangeCurrent,\r\ntoggleCollapsed} = appActions;\r\n\r\nexport default function Sidebar() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    view,\r\n    openKeys,\r\n    collapsed,\r\n    openDrawer,\r\n    current,\r\n    height,\r\n  } = useSelector(state => state.App);\r\n//   const customizedTheme = useSelector(\r\n//     state => state.ThemeSwitcher.sidebarTheme\r\n//   );\r\n\r\n  function handleClick(e) {\r\n    dispatch(changeCurrent([e.key]));\r\n    if (view === 'MobileView') {\r\n      setTimeout(() => {\r\n        dispatch(toggleCollapsed());\r\n        // dispatch(toggleOpenDrawer());\r\n      }, 100);\r\n\r\n      // clearTimeout(timer);\r\n    }\r\n  }\r\n  function onOpenChange(newOpenKeys) {\r\n    const latestOpenKey = newOpenKeys.find(\r\n      key => !(openKeys.indexOf(key) > -1)\r\n    );\r\n    console.info(openKeys);\r\n    const latestCloseKey = openKeys.find(\r\n      key => !(newOpenKeys.indexOf(key) > -1)\r\n    );\r\n    let nextOpenKeys = [];\r\n    if (latestOpenKey) {\r\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\r\n    }\r\n    if (latestCloseKey) {\r\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\r\n    }\r\n    dispatch(changeOpenKeys(nextOpenKeys));\r\n  }\r\n  const getAncestorKeys = key => {\r\n    const map = {\r\n      sub3: ['sub2'],\r\n    };\r\n    return map[key] || [];\r\n  };\r\n\r\n  const isCollapsed = collapsed && !openDrawer;\r\n  const mode = isCollapsed === true ? 'vertical' : 'inline';\r\n  const onMouseEnter = event => {\r\n    if (collapsed && openDrawer === false) {\r\n      dispatch(toggleOpenDrawer());\r\n    }\r\n    return;\r\n  };\r\n  const onMouseLeave = () => {\r\n    if (collapsed && openDrawer === true) {\r\n      dispatch(toggleOpenDrawer());\r\n    }\r\n    return;\r\n  };\r\n  const styling = {\r\n    backgroundColor: \"#0b0b37\",\r\n  };\r\n  const submenuStyle = {\r\n    backgroundColor: '',\r\n    color: \"rgb(200 200 200)\",\r\n  };\r\n  const submenuColor = {\r\n    color: \"rgb(200 200 200)\",\r\n  };\r\n  return (\r\n    <SidebarWrapper style={styling}>\r\n      <Sider\r\n        trigger={null}\r\n        collapsible={true}\r\n        collapsed={isCollapsed}\r\n        width={240}\r\n        className=\"isomorphicSidebar\"\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        style={styling}\r\n      >\r\n        <span style={{color:\"#fff\",width : \"100%\"}}>Logo</span>\r\n        {/* <Logo collapsed={isCollapsed} /> */}\r\n        {/* <Scrollbars style={{ height: height - 70 }}> */}\r\n          <Menu\r\n            onClick={handleClick}\r\n            theme=\"dark\"\r\n            className=\"isoDashboardMenu\"\r\n            mode={mode}\r\n            openKeys={isCollapsed ? [] : openKeys}\r\n            selectedKeys={current}\r\n            // onOpenChange={onOpenChange}\r\n          >\r\n            {\r\n              options.map(singleOption => (\r\n                <SidebarMenu\r\n                  key={singleOption.key}\r\n                  submenuStyle={submenuStyle}\r\n                  submenuColor={submenuColor}\r\n                  singleOption={singleOption}\r\n                />\r\n              ))\r\n            }\r\n            {/* <SubMenu\r\n              key=\"sub1\"\r\n              title={\r\n                <span className=\"isoMenuHolder\" style={submenuColor}>\r\n                  <i className=\"ion-android-options\" />\r\n                  <span className=\"nav-text\">\r\n                    <IoIosAdd/> Sidebar Menu Levels\r\n                  </span>\r\n                </span>\r\n              }\r\n            >\r\n              <MenuItemGroup\r\n                key=\"g1\"\r\n                title={\"Menu Title 1\"}\r\n              >\r\n                <Menu.Item style={submenuStyle} key=\"1\">\r\n                  Sidebar Optiosn 1\r\n                </Menu.Item>\r\n                <Menu.Item style={submenuStyle} key=\"2\">\r\n                Sidebar Optiosn 2\r\n                </Menu.Item>\r\n              </MenuItemGroup>\r\n              <MenuItemGroup\r\n                key=\"g2\"\r\n                title={\"Menu title 2\"}\r\n              >\r\n                <Menu.Item style={submenuStyle} key=\"3\">\r\n                Sidebar Optiosn 3\r\n                </Menu.Item>\r\n                <Menu.Item style={submenuStyle} key=\"4\">\r\n                Sidebar Optiosn 4\r\n                </Menu.Item>\r\n              </MenuItemGroup>\r\n            </SubMenu> */}\r\n          </Menu>\r\n        {/* </Scrollbars> */}\r\n      </Sider>\r\n    </SidebarWrapper>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst TopbarDropdownWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #ffffff;\r\n  -12px -16px;\r\n  width: 360px;\r\n  min-width: 160px;\r\n  flex-shrink: 0;\r\n  cursor: pointer;\r\n  @media only screen and (max-width: 767px) {\r\n    width: 310px;\r\n  }\r\n\r\n  .isoDropdownHeader {\r\n    border-bottom: 1px solid #f1f1f1;\r\n    0px;\r\n    padding: 15px 30px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    h3 {\r\n      font-size: 14px;\r\n      font-weight: 500;\r\n      color: ${palette('text', 0)};\r\n      text-align: center;\r\n      text-transform: uppercase;\r\n      0;\r\n    }\r\n  }\r\n\r\n  .isoDropdownBody {\r\n    width: 100%;\r\n    height: 300px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    10px;\r\n    background-color: ${palette('grayscale', 6)};\r\n\r\n    a {\r\n      text-decoration: none;\r\n    }\r\n\r\n    .isoDropdownListItem {\r\n      padding: 15px 30px;\r\n      flex-shrink: 0;\r\n      text-decoration: none;\r\n      display: flex;\r\n      flex-direction: column;\r\n      text-decoration: none;\r\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n      width: 100%;\r\n      border-bottom: 1px solid ${palette('border', 2)};\r\n\r\n      &:hover {\r\n        background-color: ${palette('grayscale', 3)};\r\n      }\r\n\r\n      .isoListHead {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        5px;\r\n      }\r\n\r\n      h5 {\r\n        font-size: 13px;\r\n        font-weight: 500;\r\n        color: ${palette('text', 0)};\r\n        0;\r\n      }\r\n\r\n      p {\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n        color: ${palette('text', 2)};\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n      }\r\n\r\n      .isoDate {\r\n        font-size: 11px;\r\n        color: ${palette('grayscale', 1)};\r\n        flex-shrink: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .isoViewAllBtn {\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${palette('text', 2)};\r\n    padding: 10px 15px 20px;\r\n    display: flex;\r\n    text-decoration: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n      color: ${palette('primary', 0)};\r\n    }\r\n  }\r\n\r\n  .isoDropdownFooterLinks {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px 30px 20px;\r\n\r\n    a {\r\n      font-size: 13px;\r\n      font-weight: 500;\r\n      color: ${palette('text', 0)};\r\n      text-decoration: none;\r\n      padding: 10px 20px;\r\n      1;\r\n      border: 1px solid ${palette('border', 1)};\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      &:hover {\r\n        background-color: ${palette('primary', 0)};\r\n        border-color: ${palette('primary', 0)};\r\n        color: #ffffff;\r\n      }\r\n    }\r\n\r\n    h3 {\r\n      font-size: 14px;\r\n      font-weight: 500;\r\n      color: ${palette('text', 0)};\r\n      1.3;\r\n    }\r\n  }\r\n\r\n  &.withImg {\r\n    .isoDropdownListItem {\r\n      display: flex;\r\n      flex-direction: row;\r\n\r\n      .isoImgWrapper {\r\n        width: 35px;\r\n        height: 35px;\r\n        overflow: hidden;\r\n        ${props =>\r\n          props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n        display: -webkit-inline-flex;\r\n        display: -ms-inline-flex;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-shrink: 0;\r\n        background-color: ${palette('grayscale', 9)};\r\n\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          object-fit: cover;\r\n        }\r\n      }\r\n\r\n      .isoListContent {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .isoListHead {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          10px;\r\n        }\r\n\r\n        h5 {\r\n          0;\r\n          padding: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n        }\r\n\r\n        .isoDate {\r\n          font-size: 11px;\r\n          color: ${palette('grayscale', 1)};\r\n          flex-shrink: 0;\r\n        }\r\n\r\n        p {\r\n          white-space: normal;\r\n          1.5;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.topbarMail {\r\n    @media only screen and (max-width: 519px) {\r\n      right: -170px;\r\n    }\r\n  }\r\n\r\n  &.topbarMessage {\r\n    @media only screen and (max-width: 500px) {\r\n      right: -69px;\r\n    }\r\n  }\r\n\r\n  &.topbarNotification {\r\n    @media only screen and (max-width: 500px) {\r\n      right: -120px;\r\n    }\r\n  }\r\n\r\n \r\n\r\n  &.isoUserDropdown {\r\n    padding: 7px 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #ffffff;\r\n    width: 220px;\r\n    min-width: 160px;\r\n    flex-shrink: 0;\r\n\r\n    .isoDropdownLink {\r\n      font-size: 13px;\r\n      color: ${palette('text', 1)};\r\n      1.1;\r\n      padding: 7px 15px;\r\n      background-color: transparent;\r\n      text-decoration: none;\r\n      display: flex;\r\n      justify-content: flex-start;\r\n\r\n      &:hover {\r\n        background-color: ${palette('secondary', 6)};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TopbarDropdownWrapper;","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport userpic from '../../../assets/images/logo.png';\r\nimport {logout} from '../../../redux/auth/actions';\r\nimport TopbarDropdownWrapper from './TopbarDropdown.styles';\r\nimport { PRIVATE_ROUTE } from '../../../route.constants';\r\nimport { Popover } from 'antd';\r\n\r\nexport default function TopbarUser() {\r\n  const [visible, setVisibility] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  function handleVisibleChange() {\r\n    setVisibility(visible => !visible);\r\n  }\r\n\r\n  const content = (\r\n    <TopbarDropdownWrapper className=\"isoUserDropdown\">\r\n      {/* <Link className=\"isoDropdownLink\" to={'/dashboard/my-profile'}>\r\n        Profil\r\n      </Link>\r\n      <Link className=\"isoDropdownLink\" to={PRIVATE_ROUTE}>\r\n        Ayarlar\r\n      </Link> */}\r\n      {/* <a className=\"isoDropdownLink\" href=''>\r\n        Message\r\n      </a>\r\n      <a className=\"isoDropdownLink\" href=''>\r\n        Help\r\n      </a> */}\r\n      <div className=\"isoDropdownLink\" onClick={() => dispatch(logout())}>\r\n        Çıkış Yap\r\n      </div>\r\n    </TopbarDropdownWrapper>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      visible={visible}\r\n      onVisibleChange={handleVisibleChange}\r\n      arrowPointAtCenter={true}\r\n      placement=\"bottomLeft\"\r\n    >\r\n      <div className=\"isoImgWrapper\">\r\n        <img alt=\"user\" src={userpic} />\r\n        <span className=\"userActivity online\" />\r\n      </div>\r\n    </Popover>\r\n  );\r\n}","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\n\r\nconst TopbarWrapper = styled.div`\r\n  .isomorphicTopbar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: #ffffff;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%);\r\n   \r\n    padding: ${props =>\r\n      props['data-rtl'] === 'rtl' ? '0 265px 0 31px' : '0 31px 0 265px'};\r\n    z-index: 1000;\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      padding: ${props =>\r\n        props['data-rtl'] === 'rtl'\r\n          ? '0px 260px 0px 15px !important'\r\n          : '0px 15px 0px 260px !important'};\r\n    }\r\n\r\n    &.collapsed {\r\n      padding: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '0 52px 0 31px' : '0 31px 0 52px'};\r\n      @media only screen and (max-width: 767px) {\r\n        padding: ${props =>\r\n          props['data-rtl'] === 'rtl'\r\n            ? '0px 15px !important'\r\n            : '0px 15px !important'};\r\n      }\r\n    }\r\n\r\n    .isoLeft {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      @media only screen and (max-width: 767px) {\r\n        ${props =>\r\n          props['data-rtl'] === 'rtl' ? '0 0 0 20px' : '0 20px 0 0'};\r\n      }\r\n\r\n      .triggerBtn {\r\n        width: 24px;\r\n        height: 100%;\r\n        display: -webkit-inline-flex;\r\n        display: -ms-inline-flex;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: transparent;\r\n        border: 0;\r\n        outline: 0;\r\n        position: relative;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    .isoRight {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      li {\r\n        ${props => (props['data-rtl'] === 'rtl' ? '35px' : '0')};\r\n        ${props => (props['data-rtl'] === 'rtl' ? '0' : '35px')};\r\n        cursor: pointer;\r\n        normal;\r\n        position: relative;\r\n        display: inline-block;\r\n\r\n        @media only screen and (max-width: 360px) {\r\n          ${props => (props['data-rtl'] === 'rtl' ? '25px' : '0')};\r\n          ${props =>\r\n            props['data-rtl'] === 'rtl' ? '0' : '25px'};\r\n        }\r\n\r\n        &:last-child {\r\n          0;\r\n        }\r\n\r\n        i {\r\n          font-size: 24px;\r\n          color: \"${palette('text', 2)};\"\r\n          1;\r\n        }\r\n\r\n        .isoIconWrapper {\r\n          position: relative;\r\n          normal;\r\n\r\n          span {\r\n            font-size: 12px;\r\n            color: #fff;\r\n            background-color: ${palette('secondary', 1)};\r\n            width: 20px;\r\n            height: 20px;\r\n            display: -webkit-inline-flex;\r\n            display: -ms-inline-flex;\r\n            display: inline-flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            text-align: center;\r\n            20px;\r\n            position: absolute;\r\n            top: -8px;\r\n            left: ${props =>\r\n              props['data-rtl'] === 'rtl' ? 'inherit' : '10px'};\r\n            right: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '10px' : 'inherit'};\r\n          }\r\n        }\r\n\r\n        &.isoMail {\r\n          .isoIconWrapper {\r\n            span {\r\n              background-color: ${palette('color', 0)};\r\n            }\r\n          }\r\n        }\r\n\r\n        &.isoNotify {\r\n          .isoIconWrapper {\r\n            span {\r\n              background-color: ${palette('primary', 2)};\r\n            }\r\n          }\r\n        }\r\n\r\n        &.isoMsg {\r\n          .isoIconWrapper {\r\n            span {\r\n              background-color: ${palette('color', 1)};\r\n            }\r\n          }\r\n        }\r\n\r\n        &.isoCart {\r\n          .isoIconWrapper {\r\n            span {\r\n              background-color: ${palette('color', 2)};\r\n            }\r\n          }\r\n        }\r\n\r\n        &.isoUser {\r\n          .isoImgWrapper {\r\n            width: 40px;\r\n            height: 40px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            position: relative;\r\n            background-color: ${palette('grayscale', 9)};\r\n\r\n            img {\r\n              height: 100%;\r\n              object-fit: cover;\r\n            }\r\n\r\n            .userActivity {\r\n              width: 10px;\r\n              height: 10px;\r\n              display: block;\r\n              background-color: ${palette('color', 3)};\r\n              position: absolute;\r\n              bottom: 0;\r\n              right: 3px;\r\n              border: 1px solid #ffffff;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .isoUserDropdown {\r\n    .ant-popover-inner {\r\n      .ant-popover-inner-content {\r\n        .isoUserDropdownContent {\r\n          padding: 7px 0;\r\n          display: flex;\r\n          flex-direction: column;\r\n          position: absolute;\r\n          top: 0;\r\n          right: 0;\r\n          background-color: #ffffff;\r\n          width: 220px;\r\n          min-width: 160px;\r\n          flex-shrink: 0;\r\n\r\n          .isoDropdownLink {\r\n            font-size: 13px;\r\n            color: ${palette('text', 1)};\r\n            1.1;\r\n            padding: 7px 15px;\r\n            background-color: transparent;\r\n            text-decoration: none;\r\n            display: flex;\r\n            justify-content: flex-start;\r\n\r\n            &:hover {\r\n              background-color: ${palette('secondary', 6)};\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Dropdown\r\n  .ant-popover {\r\n    .ant-popover-inner {\r\n      .ant-popover-inner-content {\r\n        .isoDropdownContent {\r\n          display: flex;\r\n          flex-direction: column;\r\n          position: absolute;\r\n          top: 0;\r\n          right: 0;\r\n          background-color: #ffffff;\r\n          width: 360px;\r\n          min-width: 160px;\r\n          flex-shrink: 0;\r\n\r\n          @media only screen and (max-width: 767px) {\r\n            width: 310px;\r\n          }\r\n\r\n          .isoDropdownHeader {\r\n            border-bottom: 1px solid #f1f1f1;\r\n            0px;\r\n            padding: 15px 30px;\r\n            width: 100%;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n\r\n            h3 {\r\n              font-size: 14px;\r\n              font-weight: 500;\r\n              color: ${palette('text', 0)};\r\n              text-align: center;\r\n              text-transform: uppercase;\r\n              0;\r\n            }\r\n          }\r\n\r\n          .isoDropdownBody {\r\n            width: 100%;\r\n            height: 300px;\r\n            overflow-y: auto;\r\n            display: flex;\r\n            flex-direction: column;\r\n            10px;\r\n            background-color: ${palette('grayscale', 6)};\r\n\r\n            .isoDropdownListItem {\r\n              padding: 15px 30px;\r\n              flex-shrink: 0;\r\n              text-decoration: none;\r\n              display: flex;\r\n              flex-direction: column;\r\n              text-decoration: none;\r\n              width: 100%;\r\n\r\n              &:hover {\r\n                background-color: ${palette('grayscale', 3)};\r\n              }\r\n\r\n              .isoListHead {\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n                5px;\r\n              }\r\n\r\n              h5 {\r\n                font-size: 13px;\r\n                font-weight: 500;\r\n                color: ${palette('text', 0)};\r\n                0;\r\n              }\r\n\r\n              p {\r\n                font-size: 12px;\r\n                font-weight: 400;\r\n                color: ${palette('text', 2)};\r\n                white-space: nowrap;\r\n                text-overflow: ellipsis;\r\n                overflow: hidden;\r\n              }\r\n\r\n              .isoDate {\r\n                font-size: 11px;\r\n                color: ${palette('grayscale', 1)};\r\n                flex-shrink: 0;\r\n              }\r\n            }\r\n          }\r\n\r\n          .isoViewAllBtn {\r\n            font-size: 13px;\r\n            font-weight: 500;\r\n            color: ${palette('text', 2)};\r\n            padding: 10px 15px 20px;\r\n            display: flex;\r\n            text-decoration: none;\r\n            align-items: center;\r\n            justify-content: center;\r\n            text-align: center;\r\n\r\n            &:hover {\r\n              color: ${palette('primary', 0)};\r\n            }\r\n          }\r\n\r\n          .isoDropdownFooterLinks {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            padding: 10px 30px 20px;\r\n\r\n            a {\r\n              font-size: 13px;\r\n              font-weight: 500;\r\n              color: ${palette('text', 0)};\r\n              text-decoration: none;\r\n              padding: 10px 20px;\r\n              1;\r\n              border: 1px solid ${palette('border', 1)};\r\n              display: flex;\r\n              align-items: center;\r\n              justify-content: center;\r\n\r\n              &:hover {\r\n                background-color: ${palette('primary', 0)};\r\n                border-color: ${palette('primary', 0)};\r\n                color: #ffffff;\r\n              }\r\n            }\r\n\r\n            h3 {\r\n              font-size: 14px;\r\n              font-weight: 500;\r\n              color: ${palette('text', 0)};\r\n              1.3;\r\n            }\r\n          }\r\n\r\n          &.withImg {\r\n            .isoDropdownListItem {\r\n              display: flex;\r\n              flex-direction: row;\r\n\r\n              .isoImgWrapper {\r\n                width: 35px;\r\n                height: 35px;\r\n                overflow: hidden;\r\n                15px;\r\n                display: -webkit-inline-flex;\r\n                display: -ms-inline-flex;\r\n                display: inline-flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                flex-shrink: 0;\r\n                background-color: ${palette('grayscale', 9)};\r\n\r\n                img {\r\n                  width: 100%;\r\n                  height: 100%;\r\n                  object-fit: cover;\r\n                }\r\n              }\r\n\r\n              .isoListContent {\r\n                width: 100%;\r\n                display: flex;\r\n                flex-direction: column;\r\n\r\n                .isoListHead {\r\n                  display: flex;\r\n                  justify-content: space-between;\r\n                  align-items: center;\r\n                  10px;\r\n                }\r\n\r\n                h5 {\r\n                  0;\r\n                  padding-right: 15px;\r\n                }\r\n\r\n                .isoDate {\r\n                  font-size: 11px;\r\n                  color: ${palette('grayscale', 1)};\r\n                  flex-shrink: 0;\r\n                }\r\n\r\n                p {\r\n                  white-space: normal;\r\n                  1.5;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &.topbarMail {\r\n      .ant-popover-inner {\r\n        .ant-popover-inner-content {\r\n          .isoDropdownContent {\r\n            @media only screen and (max-width: 519px) {\r\n              right: -170px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &.topbarMessage {\r\n      .ant-popover-inner {\r\n        .ant-popover-inner-content {\r\n          .isoDropdownContent {\r\n            @media only screen and (max-width: 500px) {\r\n              right: -69px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &.topbarNotification {\r\n      .ant-popover-inner {\r\n        .ant-popover-inner-content {\r\n          .isoDropdownContent {\r\n            @media only screen and (max-width: 500px) {\r\n              right: -120px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n   \r\n  }\r\n`;\r\n\r\nexport default TopbarWrapper;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport appActions from '../../../redux/app/actions';\r\n// import TopbarNotification from './TopbarNotification';\r\n// import TopbarMessage from './TopbarMessage';\r\n// import TopbarSearch from './TopbarSearch';\r\nimport TopbarUser from './TopbarUser';\r\nimport TopbarWrapper from './Topbar.styles';\r\nimport { MenuUnfoldOutlined } from '@ant-design/icons';\r\n\r\nconst { Header } = Layout;\r\nconst { toggleCollapsed } = appActions;\r\n\r\nexport default function Topbar() {\r\n  const [selectedItem, setSelectedItem] = React.useState('');\r\n  //const customizedTheme = useSelector(state => state.ThemeSwitcher.topbarTheme);\r\n  const customizedTheme = {\r\n    backgroundColor : \"#fff\",\r\n    textColor : \"#444\"\r\n  }\r\n  const { collapsed, openDrawer } = useSelector(state => state.App);\r\n  const dispatch = useDispatch();\r\n  const handleToggle = React.useCallback(() => dispatch(toggleCollapsed()), [\r\n    dispatch,\r\n  ]);\r\n  const isCollapsed = collapsed && !openDrawer;\r\n  const styling = {\r\n    background: customizedTheme.backgroundColor,\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: 60,\r\n  };\r\n  return (\r\n    <TopbarWrapper data-rtl=\"rtl\">\r\n      <Header\r\n        style={styling}\r\n        \r\n        className={\r\n          isCollapsed ? 'isomorphicTopbar collapsed' : 'isomorphicTopbar'\r\n        }\r\n      >\r\n        <div className=\"isoLeft\">\r\n          <button\r\n            className={\r\n              isCollapsed ? 'triggerBtn menuCollapsed' : 'triggerBtn menuOpen'\r\n            }\r\n            style={{ color: customizedTheme.textColor }}\r\n            onClick={handleToggle}\r\n          ><MenuUnfoldOutlined/></button>\r\n        </div>\r\n\r\n        <ul className=\"isoRight\">\r\n          {/* <li className=\"isoSearch\">\r\n            <TopbarSearch />\r\n          </li> */}\r\n\r\n          {/* <li\r\n            onClick={() => setSelectedItem('notification')}\r\n            className={selectedItem ? 'isoNotify active' : 'isoNotify'}\r\n          >\r\n            <TopbarNotification />\r\n          </li> */}\r\n\r\n          {/* <li onClick={() => setSelectedItem('message')} className=\"isoMsg\">\r\n            <TopbarMessage />\r\n          </li> */}\r\n\r\n          <li onClick={() => setSelectedItem('user')} className=\"isoUser\">\r\n            <TopbarUser />\r\n          </li>\r\n        </ul>\r\n      </Header>\r\n    </TopbarWrapper>\r\n  );\r\n}","import { lazy, Suspense } from 'react';\r\nimport { Route, useRouteMatch, Switch, BrowserRouter as Router } from 'react-router-dom';\r\nimport Loader from '../../../components/utility/loader';\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: '',\r\n    component: lazy(() => import('../main/Main')),\r\n    exact : true\r\n  },\r\n  {\r\n    path: '/kategoriler',\r\n    component: lazy(() => import('../kategoriler/Kategori')),\r\n  }\r\n];\r\n\r\nexport default function AppRouter() {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n        <Switch>\r\n          {routes.map((route, idx) => (\r\n            <Route exact={route.exact} key={idx} path={`${url}${route.path}`}>\r\n              <route.component />\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n    </Suspense>\r\n  );\r\n}","\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nexport const DashboardGlobalStyles = createGlobalStyle`\r\nbody {\r\n  -webkit-overflow-scrolling: touch;\r\n}\r\n\r\nhtml h1,\r\nhtml h2,\r\nhtml h3,\r\nhtml h4,\r\nhtml h5,\r\nhtml h6,\r\nhtml a,\r\nhtml p,\r\nhtml li,\r\ninput,\r\ntextarea,\r\nspan,\r\ndiv,\r\nhtml,\r\nbody,\r\nhtml a\r\n{\r\n  0;\r\n  'Poppins',sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);\r\n}\r\n\r\nhtml ul {\r\n  -webkit-padding-start: 0px;\r\n  list-style: none;\r\n  0;\r\n}\r\n\r\n.scrollbar-track-y,\r\n.scrollbar-thumb-y {\r\n  width: 5px !important;\r\n}\r\n\r\n.scrollbar-track-x,\r\n.scrollbar-thumb-x {\r\n  height: 5px !important;\r\n}\r\n\r\n.scrollbar-thumb {\r\n  border-radius: 0 !important;\r\n}\r\n\r\n.scrollbar-track {\r\n  background: rgba(222, 222, 222, 0.15) !important;\r\n}\r\n\r\n.scrollbar-thumb {\r\n  border-radius: 0 !important;\r\n  background: rgba(0, 0, 0, 0.5) !important;\r\n}\r\n\r\n.ant-popover-placement-bottom > .ant-popover-content > .ant-popover-arrow:after,\r\n.ant-popover-placement-bottomLeft\r\n  > .ant-popover-content\r\n  > .ant-popover-arrow:after,\r\n.ant-popover-placement-bottomRight\r\n  > .ant-popover-content\r\n  > .ant-popover-arrow:after,\r\n.ant-popover-placement-top > .ant-popover-content > .ant-popover-arrow:after,\r\n.ant-popover-placement-topLeft\r\n  > .ant-popover-content\r\n  > .ant-popover-arrow:after,\r\n.ant-popover-placement-topRight\r\n  > .ant-popover-content\r\n  > .ant-popover-arrow:after {\r\n  left: 0;\r\n  -4px;\r\n}\r\n\r\n/* Instagram Modal */\r\n\r\n.ant-modal-wrap.instagram-modal .ant-modal {\r\n  max-width: 935px;\r\n  width: 100% !important;\r\n}\r\n\r\n@media only screen and (max-width: 991px) {\r\n  .ant-modal-wrap.instagram-modal .ant-modal {\r\n    padding: 0 60px;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 767px) {\r\n  .ant-modal-wrap.instagram-modal .ant-modal {\r\n    max-width: 5 20px;\r\n  }\r\n}\r\n\r\n.ant-modal-wrap.instagram-modal .ant-modal-content {\r\n  border-radius: 0;\r\n}\r\n\r\n.ant-modal-wrap.instagram-modal .ant-modal-content button.ant-modal-close {\r\n  position: fixed;\r\n  color: #fff;\r\n}\r\n\r\n.ant-modal-wrap.instagram-modal .ant-modal-content button.ant-modal-close i {\r\n  font-size: 24px;\r\n}\r\n\r\n.ant-modal-wrap.instagram-modal .ant-modal-content .ant-modal-body {\r\n  padding: 0;\r\n}\r\n\r\n/********** Add Your Global RTL CSS Here **********/\r\n\r\n/* Popover */\r\n\r\nhtml[dir='rtl'] .ant-popover {\r\n  text-align: right;\r\n}\r\n\r\n/* Ecommerce Card */\r\n\r\nhtml[dir='rtl'] .isoCardInfoForm .ant-input {\r\n  text-align: right;\r\n}\r\n\r\n/* Modal */\r\n\r\nhtml[dir='rtl'] .has-success.has-feedback:after,\r\nhtml[dir='rtl'] .has-warning.has-feedback:after,\r\nhtml[dir='rtl'] .has-error.has-feedback:after,\r\nhtml[dir='rtl'] .is-validating.has-feedback:after {\r\n  left: 0;\r\n  right: auto;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-modal-close {\r\n  right: inherit;\r\n  left: 0;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-modal-footer {\r\n  text-align: left;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-modal-footer button + button {\r\n  0;\r\n  8px;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-confirm-body .ant-confirm-content {\r\n  42px;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-btn > .anticon + span,\r\nhtml[dir='rtl'] .ant-btn > span + .anticon {\r\n  0.5em;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-btn-loading span {\r\n  0;\r\n  0.5em;\r\n}\r\n\r\nhtml[dir='rtl']\r\n  .ant-btn.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline) {\r\n  padding-left: 25px;\r\n  padding-right: 29px;\r\n}\r\n\r\nhtml[dir='rtl']\r\n  .ant-btn.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline)\r\n  .anticon {\r\n  -14px;\r\n  0;\r\n}\r\n\r\n/* Confirm */\r\n\r\nhtml[dir='rtl'] .ant-modal.ant-confirm .ant-confirm-body > .anticon {\r\n  16px;\r\n  0;\r\n  float: right;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-modal.ant-confirm .ant-confirm-btns {\r\n  float: left;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-modal.ant-confirm .ant-confirm-btns button + button {\r\n  10px;\r\n  0;\r\n}\r\n\r\n/* Message */\r\n\r\nhtml[dir='rtl'] .ant-message .anticon {\r\n  8px;\r\n  0;\r\n}\r\n\r\n/* Pop Confirm */\r\n\r\nhtml[dir='rtl'] .ant-popover-message-title {\r\n  padding-right: 20px;\r\n  padding-left: 0;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-popover-buttons {\r\n  text-align: left;\r\n}\r\n\r\n/* Notification */\r\n\r\nhtml[dir='rtl']\r\n  .ant-notification-notice-closable\r\n  .ant-notification-notice-message {\r\n  padding-left: 24px;\r\n  padding-right: 0;\r\n}\r\n\r\nhtml[dir='rtl']\r\n  .ant-notification-notice-with-icon\r\n  .ant-notification-notice-message,\r\nhtml[dir='rtl']\r\n  .ant-notification-notice-with-icon\r\n  .ant-notification-notice-description {\r\n  48px;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-notification-notice-close {\r\n  right: auto;\r\n  left: 16px;\r\n}\r\n\r\nhtml[dir='rtl'] .ant-notification-notice-with-icon {\r\n  left: 0;\r\n}\r\n\r\n/* Dropzone */\r\n\r\nhtml[dir='rtl'] .dz-hidden-input {\r\n  display: none;\r\n}\r\n\r\n`;\r\nexport const DashboardContainer = styled.div`\r\n  -webkit-overflow-scrolling: touch;\r\n  .trigger {\r\n    font-size: 18px;\r\n    64px;\r\n    padding: 0 16px;\r\n    cursor: pointer;\r\n    transition: color 0.3s;\r\n  }\r\n\r\n  .trigger:hover {\r\n    color: ${palette('primary', 0)};\r\n  }\r\n\r\n  .ant-layout-sider-collapsed .anticon {\r\n    font-size: 16px;\r\n  }\r\n\r\n  .ant-layout-sider-collapsed .nav-text {\r\n    display: none;\r\n  }\r\n\r\n  .ant-layout {\r\n    background: ${palette('secondary', 1)};\r\n\r\n    &.isoContentMainLayout {\r\n      overflow: auto;\r\n      overflow-x: hidden;\r\n      height : auto!important;\r\n      @media only screen and (min-width: 768px) and (max-width: 1220px) {\r\n        width: calc(100% -  20px);\r\n        flex-shrink: 0;\r\n      }\r\n\r\n      @media only screen and (max-width: 767px) {\r\n        width: 100%;\r\n        flex-shrink: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .isoLayoutContent {\r\n    width: 100%;\r\n    padding: 35px;\r\n    background-color: #ffffff;\r\n    border: 1px solid ${palette('border', 0)};\r\n    height: 100%;\r\n  }\r\n\r\n  .isomorphicLayout {\r\n    width: calc(100% - 240px);\r\n    flex-shrink: 0;\r\n    overflow-x: hidden !important;\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n\r\n    @media only screen and (min-width: 768px) and (max-width: 1220px) {\r\n      width: calc(100% -  20px);\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .ant-layout-footer {\r\n    font-size: 13px;\r\n    @media (max-width: 767px) {\r\n      padding: 10px 20px;\r\n    }\r\n  }\r\n\r\n  ${'' /* button {\r\n    border-radius: 0;\r\n  } */};\r\n`;\r\n","import React from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport Sidebar from '../../../components/common/sidebar/Sidebar';\r\nimport Topbar from '../../../components/common/topbar/Topbar';\r\nimport DashboardRoutes from './DashboardRoutes';\r\n\r\nimport { DashboardContainer, DashboardGlobalStyles } from './Dashboard.styles';\r\n\r\nconst { Content, Footer } = Layout;\r\nconst styles = {\r\n  layout: { flexDirection: 'row', overflowX: 'hidden' },\r\n  content: {\r\n    padding: '70px 0 0',\r\n    flexShrink: '0',\r\n    background: '#f1f3f6',\r\n    position: 'relative',\r\n  },\r\n  footer: {\r\n    background: '#ffffff',\r\n    textAlign: 'center',\r\n    borderTop: '1px solid #ededed',\r\n  },\r\n};\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <DashboardContainer>\r\n      <DashboardGlobalStyles />\r\n      <Layout style={{ height: \"100vh\" }}>\r\n        <Topbar />\r\n        <Layout style={styles.layout}>\r\n          <Sidebar /> \r\n          <Layout\r\n            className=\"isoContentMainLayout\"\r\n            // style={{\r\n            //   height: appHeight,\r\n            // }}\r\n          >\r\n            <Content id='site-content' className=\"isomorphicContent\" style={styles.content}>\r\n              <DashboardRoutes />\r\n            </Content>\r\n            <Footer style={styles.footer}>{\"siteConfig.footerText\"}</Footer>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    </DashboardContainer>\r\n  );\r\n}\r\n \r\n\r\n"],"sourceRoot":""}